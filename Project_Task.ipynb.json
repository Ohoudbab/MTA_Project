{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a2a1c8f0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: sqlalchemy in /Users/ohoudalbabtain/opt/anaconda3/lib/python3.8/site-packages (1.4.7)\n",
      "Requirement already satisfied: greenlet!=0.4.17 in /Users/ohoudalbabtain/opt/anaconda3/lib/python3.8/site-packages (from sqlalchemy) (1.0.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install sqlalchemy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "54ae6fb7",
   "metadata": {},
   "outputs": [],
   "source": [
    "import sqlalchemy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "154b8058",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import numpy as np\n",
    "import datetime\n",
    "pd.set_option('display.max_rows',100)\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "58ac2274",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Source: http://web.mta.info/developers/turnstile.html\n",
    "def get_data(week_nums):\n",
    "    url = \"http://web.mta.info/developers/data/nyct/turnstile/turnstile_{}.txt\"\n",
    "    dfs = []\n",
    "    for week_num in week_nums:\n",
    "        file_url = url.format(week_num)\n",
    "        dfs.append(pd.read_csv(file_url))\n",
    "    return pd.concat(dfs)\n",
    "        \n",
    "week_nums = [210703, 210710, 210717, 210724, 210731, 210807, 210814, 210821, 210828, 210904, 210911, 210918, 210925]\n",
    "turnstiles_df = get_data(week_nums)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "afe8f2a1",
   "metadata": {},
   "outputs": [],
   "source": [
    "turnstiles_df. to_csv ('data.CSV', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "74656105",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>LINENAME</th>\n",
       "      <th>DIVISION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>TIME</th>\n",
       "      <th>DESC</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>00:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592792</td>\n",
       "      <td>2595706</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>04:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592804</td>\n",
       "      <td>2595713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>08:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592816</td>\n",
       "      <td>2595729</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>12:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592870</td>\n",
       "      <td>2595762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>16:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592992</td>\n",
       "      <td>2595791</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    C/A  UNIT       SCP STATION LINENAME DIVISION        DATE      TIME  \\\n",
       "0  A002  R051  02-00-00   59 ST  NQR456W      BMT  06/26/2021  00:00:00   \n",
       "1  A002  R051  02-00-00   59 ST  NQR456W      BMT  06/26/2021  04:00:00   \n",
       "2  A002  R051  02-00-00   59 ST  NQR456W      BMT  06/26/2021  08:00:00   \n",
       "3  A002  R051  02-00-00   59 ST  NQR456W      BMT  06/26/2021  12:00:00   \n",
       "4  A002  R051  02-00-00   59 ST  NQR456W      BMT  06/26/2021  16:00:00   \n",
       "\n",
       "      DESC  ENTRIES    EXITS  \n",
       "0  REGULAR  7592792  2595706  \n",
       "1  REGULAR  7592804  2595713  \n",
       "2  REGULAR  7592816  2595729  \n",
       "3  REGULAR  7592870  2595762  \n",
       "4  REGULAR  7592992  2595791  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sqlalchemy import create_engine\n",
    "engine = create_engine(\"sqlite:///DataProject.db\")\n",
    "df = pd.read_sql('SELECT * FROM data;', engine)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b289fe85",
   "metadata": {},
   "outputs": [],
   "source": [
    "import datetime\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "bf6444a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Take the date and time fields into a single datetime column\n",
    "turnstiles_df[\"DATE_TIME\"] = pd.to_datetime(turnstiles_df.DATE + \" \" + turnstiles_df.TIME, \n",
    "                                            format=\"%m/%d/%Y %H:%M:%S\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "537da33f",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>LINENAME</th>\n",
       "      <th>DIVISION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>TIME</th>\n",
       "      <th>DESC</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "      <th>DATE_TIME</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>00:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592792</td>\n",
       "      <td>2595706</td>\n",
       "      <td>2021-06-26 00:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>04:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592804</td>\n",
       "      <td>2595713</td>\n",
       "      <td>2021-06-26 04:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>08:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592816</td>\n",
       "      <td>2595729</td>\n",
       "      <td>2021-06-26 08:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>12:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592870</td>\n",
       "      <td>2595762</td>\n",
       "      <td>2021-06-26 12:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>NQR456W</td>\n",
       "      <td>BMT</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>16:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7592992</td>\n",
       "      <td>2595791</td>\n",
       "      <td>2021-06-26 16:00:00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    C/A  UNIT       SCP STATION LINENAME DIVISION        DATE      TIME  \\\n",
       "0  A002  R051  02-00-00   59 ST  NQR456W      BMT  06/26/2021  00:00:00   \n",
       "1  A002  R051  02-00-00   59 ST  NQR456W      BMT  06/26/2021  04:00:00   \n",
       "2  A002  R051  02-00-00   59 ST  NQR456W      BMT  06/26/2021  08:00:00   \n",
       "3  A002  R051  02-00-00   59 ST  NQR456W      BMT  06/26/2021  12:00:00   \n",
       "4  A002  R051  02-00-00   59 ST  NQR456W      BMT  06/26/2021  16:00:00   \n",
       "\n",
       "      DESC  ENTRIES  \\\n",
       "0  REGULAR  7592792   \n",
       "1  REGULAR  7592804   \n",
       "2  REGULAR  7592816   \n",
       "3  REGULAR  7592870   \n",
       "4  REGULAR  7592992   \n",
       "\n",
       "   EXITS                                                                 \\\n",
       "0                                            2595706                      \n",
       "1                                            2595713                      \n",
       "2                                            2595729                      \n",
       "3                                            2595762                      \n",
       "4                                            2595791                      \n",
       "\n",
       "            DATE_TIME  \n",
       "0 2021-06-26 00:00:00  \n",
       "1 2021-06-26 04:00:00  \n",
       "2 2021-06-26 08:00:00  \n",
       "3 2021-06-26 12:00:00  \n",
       "4 2021-06-26 16:00:00  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "turnstiles_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "67ed65e3",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2.724418e+06</td>\n",
       "      <td>2.724418e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>4.148078e+07</td>\n",
       "      <td>3.317211e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>2.181339e+08</td>\n",
       "      <td>1.916161e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.198380e+05</td>\n",
       "      <td>1.027980e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.396824e+06</td>\n",
       "      <td>8.526620e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>5.997710e+06</td>\n",
       "      <td>3.971601e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2.147407e+09</td>\n",
       "      <td>2.133797e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            ENTRIES  \\\n",
       "count  2.724418e+06   \n",
       "mean   4.148078e+07   \n",
       "std    2.181339e+08   \n",
       "min    0.000000e+00   \n",
       "25%    2.198380e+05   \n",
       "50%    1.396824e+06   \n",
       "75%    5.997710e+06   \n",
       "max    2.147407e+09   \n",
       "\n",
       "       EXITS                                                                 \n",
       "count                                       2.724418e+06                     \n",
       "mean                                        3.317211e+07                     \n",
       "std                                         1.916161e+08                     \n",
       "min                                         0.000000e+00                     \n",
       "25%                                         1.027980e+05                     \n",
       "50%                                         8.526620e+05                     \n",
       "75%                                         3.971601e+06                     \n",
       "max                                         2.133797e+09                     "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "turnstiles_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "2e149410",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 2724418 entries, 0 to 210399\n",
      "Data columns (total 12 columns):\n",
      " #   Column                                                                Dtype         \n",
      "---  ------                                                                -----         \n",
      " 0   C/A                                                                   object        \n",
      " 1   UNIT                                                                  object        \n",
      " 2   SCP                                                                   object        \n",
      " 3   STATION                                                               object        \n",
      " 4   LINENAME                                                              object        \n",
      " 5   DIVISION                                                              object        \n",
      " 6   DATE                                                                  object        \n",
      " 7   TIME                                                                  object        \n",
      " 8   DESC                                                                  object        \n",
      " 9   ENTRIES                                                               int64         \n",
      " 10  EXITS                                                                 int64         \n",
      " 11  DATE_TIME                                                             datetime64[ns]\n",
      "dtypes: datetime64[ns](1), int64(2), object(9)\n",
      "memory usage: 270.2+ MB\n"
     ]
    }
   ],
   "source": [
    "turnstiles_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "1769049c",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>LINENAME</th>\n",
       "      <th>DIVISION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>TIME</th>\n",
       "      <th>DESC</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "      <th>DATE_TIME</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210395</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210396</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210397</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210398</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210399</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2724418 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          C/A   UNIT    SCP  STATION  LINENAME  DIVISION   DATE   TIME   DESC  \\\n",
       "0       False  False  False    False     False     False  False  False  False   \n",
       "1       False  False  False    False     False     False  False  False  False   \n",
       "2       False  False  False    False     False     False  False  False  False   \n",
       "3       False  False  False    False     False     False  False  False  False   \n",
       "4       False  False  False    False     False     False  False  False  False   \n",
       "...       ...    ...    ...      ...       ...       ...    ...    ...    ...   \n",
       "210395  False  False  False    False     False     False  False  False  False   \n",
       "210396  False  False  False    False     False     False  False  False  False   \n",
       "210397  False  False  False    False     False     False  False  False  False   \n",
       "210398  False  False  False    False     False     False  False  False  False   \n",
       "210399  False  False  False    False     False     False  False  False  False   \n",
       "\n",
       "        ENTRIES  \\\n",
       "0         False   \n",
       "1         False   \n",
       "2         False   \n",
       "3         False   \n",
       "4         False   \n",
       "...         ...   \n",
       "210395    False   \n",
       "210396    False   \n",
       "210397    False   \n",
       "210398    False   \n",
       "210399    False   \n",
       "\n",
       "        EXITS                                                                 \\\n",
       "0                                                   False                      \n",
       "1                                                   False                      \n",
       "2                                                   False                      \n",
       "3                                                   False                      \n",
       "4                                                   False                      \n",
       "...                                                   ...                      \n",
       "210395                                              False                      \n",
       "210396                                              False                      \n",
       "210397                                              False                      \n",
       "210398                                              False                      \n",
       "210399                                              False                      \n",
       "\n",
       "        DATE_TIME  \n",
       "0           False  \n",
       "1           False  \n",
       "2           False  \n",
       "3           False  \n",
       "4           False  \n",
       "...           ...  \n",
       "210395      False  \n",
       "210396      False  \n",
       "210397      False  \n",
       "210398      False  \n",
       "210399      False  \n",
       "\n",
       "[2724418 rows x 12 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "turnstiles_df.isna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "0a06b435",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE_TIME</th>\n",
       "      <th>ENTRIES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2702968</th>\n",
       "      <td>S101</td>\n",
       "      <td>R070</td>\n",
       "      <td>00-00-02</td>\n",
       "      <td>ST. GEORGE</td>\n",
       "      <td>2021-09-16 08:00:00</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2702884</th>\n",
       "      <td>S101</td>\n",
       "      <td>R070</td>\n",
       "      <td>00-00-02</td>\n",
       "      <td>ST. GEORGE</td>\n",
       "      <td>2021-09-02 16:00:00</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2455849</th>\n",
       "      <td>R516</td>\n",
       "      <td>R291</td>\n",
       "      <td>00-00-00</td>\n",
       "      <td>33 ST-RAWSON ST</td>\n",
       "      <td>2021-08-24 16:00:00</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1390007</th>\n",
       "      <td>N535</td>\n",
       "      <td>R220</td>\n",
       "      <td>00-00-01</td>\n",
       "      <td>CARROLL ST</td>\n",
       "      <td>2021-08-31 16:00:00</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1389458</th>\n",
       "      <td>N535</td>\n",
       "      <td>R220</td>\n",
       "      <td>00-00-00</td>\n",
       "      <td>CARROLL ST</td>\n",
       "      <td>2021-08-31 16:00:00</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          C/A  UNIT       SCP          STATION           DATE_TIME  ENTRIES\n",
       "2702968  S101  R070  00-00-02       ST. GEORGE 2021-09-16 08:00:00        2\n",
       "2702884  S101  R070  00-00-02       ST. GEORGE 2021-09-02 16:00:00        2\n",
       "2455849  R516  R291  00-00-00  33 ST-RAWSON ST 2021-08-24 16:00:00        2\n",
       "1390007  N535  R220  00-00-01       CARROLL ST 2021-08-31 16:00:00        2\n",
       "1389458  N535  R220  00-00-00       CARROLL ST 2021-08-31 16:00:00        2"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Sanity Check to verify that \"C/A\", \"UNIT\", \"SCP\", \"STATION\", \"DATE_TIME\" is unique\n",
    "(turnstiles_df\n",
    " .groupby([\"C/A\", \"UNIT\", \"SCP\", \"STATION\", \"DATE_TIME\"])\n",
    " .ENTRIES.count()\n",
    " .reset_index()\n",
    " .sort_values(\"ENTRIES\", ascending=False)).head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "dc4cd86e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get rid of the duplicate entry\n",
    "turnstiles_df.sort_values([\"C/A\", \"UNIT\", \"SCP\", \"STATION\", \"DATE_TIME\"], \n",
    "                          inplace=True, ascending=False)\n",
    "turnstiles_df.drop_duplicates(subset=[\"C/A\", \"UNIT\", \"SCP\", \"STATION\", \"DATE_TIME\"], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "4af87752",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE_TIME</th>\n",
       "      <th>ENTRIES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A002</td>\n",
       "      <td>R051</td>\n",
       "      <td>02-00-00</td>\n",
       "      <td>59 ST</td>\n",
       "      <td>2021-06-26 00:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816191</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-05 12:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816193</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-05 20:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816194</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-06 00:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816195</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-06 04:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816196</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-06 08:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816197</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-06 12:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816198</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-06 16:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816199</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-06 20:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816200</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-07 00:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816201</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-07 04:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816202</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-07 08:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816203</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-07 12:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816204</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-07 16:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816205</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-07 20:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816206</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-08 00:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816207</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-08 04:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816208</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-08 08:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816209</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-08 12:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1816192</th>\n",
       "      <td>R139</td>\n",
       "      <td>R031</td>\n",
       "      <td>04-00-00</td>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>2021-09-05 16:00:00</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          C/A  UNIT       SCP         STATION           DATE_TIME  ENTRIES\n",
       "0        A002  R051  02-00-00           59 ST 2021-06-26 00:00:00        1\n",
       "1816191  R139  R031  04-00-00  34 ST-PENN STA 2021-09-05 12:00:00        1\n",
       "1816193  R139  R031  04-00-00  34 ST-PENN STA 2021-09-05 20:00:00        1\n",
       "1816194  R139  R031  04-00-00  34 ST-PENN STA 2021-09-06 00:00:00        1\n",
       "1816195  R139  R031  04-00-00  34 ST-PENN STA 2021-09-06 04:00:00        1\n",
       "1816196  R139  R031  04-00-00  34 ST-PENN STA 2021-09-06 08:00:00        1\n",
       "1816197  R139  R031  04-00-00  34 ST-PENN STA 2021-09-06 12:00:00        1\n",
       "1816198  R139  R031  04-00-00  34 ST-PENN STA 2021-09-06 16:00:00        1\n",
       "1816199  R139  R031  04-00-00  34 ST-PENN STA 2021-09-06 20:00:00        1\n",
       "1816200  R139  R031  04-00-00  34 ST-PENN STA 2021-09-07 00:00:00        1\n",
       "1816201  R139  R031  04-00-00  34 ST-PENN STA 2021-09-07 04:00:00        1\n",
       "1816202  R139  R031  04-00-00  34 ST-PENN STA 2021-09-07 08:00:00        1\n",
       "1816203  R139  R031  04-00-00  34 ST-PENN STA 2021-09-07 12:00:00        1\n",
       "1816204  R139  R031  04-00-00  34 ST-PENN STA 2021-09-07 16:00:00        1\n",
       "1816205  R139  R031  04-00-00  34 ST-PENN STA 2021-09-07 20:00:00        1\n",
       "1816206  R139  R031  04-00-00  34 ST-PENN STA 2021-09-08 00:00:00        1\n",
       "1816207  R139  R031  04-00-00  34 ST-PENN STA 2021-09-08 04:00:00        1\n",
       "1816208  R139  R031  04-00-00  34 ST-PENN STA 2021-09-08 08:00:00        1\n",
       "1816209  R139  R031  04-00-00  34 ST-PENN STA 2021-09-08 12:00:00        1\n",
       "1816192  R139  R031  04-00-00  34 ST-PENN STA 2021-09-05 16:00:00        1"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Sanity Check to verify that \"C/A\", \"UNIT\", \"SCP\", \"STATION\", \"DATE_TIME\" is unique\n",
    "(turnstiles_df\n",
    " .groupby([\"C/A\", \"UNIT\", \"SCP\", \"STATION\", \"DATE_TIME\"])\n",
    " .ENTRIES.count()\n",
    " .reset_index()\n",
    " .sort_values(\"ENTRIES\", ascending=False)).head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "41c0462d",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "turnstiles_df.dropna(inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "8e9cf9f0",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "C/A                                                                     0\n",
       "UNIT                                                                    0\n",
       "SCP                                                                     0\n",
       "STATION                                                                 0\n",
       "LINENAME                                                                0\n",
       "DIVISION                                                                0\n",
       "DATE                                                                    0\n",
       "TIME                                                                    0\n",
       "DESC                                                                    0\n",
       "ENTRIES                                                                 0\n",
       "EXITS                                                                   0\n",
       "DATE_TIME                                                               0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "turnstiles_df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "772d0e82",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>LINENAME</th>\n",
       "      <th>DIVISION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>TIME</th>\n",
       "      <th>DESC</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "      <th>DATE_TIME</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1457</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>NQRW</td>\n",
       "      <td>BMT</td>\n",
       "      <td>09/01/2021</td>\n",
       "      <td>20:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>506825</td>\n",
       "      <td>1719468</td>\n",
       "      <td>2021-09-01 20:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1456</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>NQRW</td>\n",
       "      <td>BMT</td>\n",
       "      <td>09/01/2021</td>\n",
       "      <td>16:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>506775</td>\n",
       "      <td>1719232</td>\n",
       "      <td>2021-09-01 16:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1455</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>NQRW</td>\n",
       "      <td>BMT</td>\n",
       "      <td>09/01/2021</td>\n",
       "      <td>12:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>506736</td>\n",
       "      <td>1718999</td>\n",
       "      <td>2021-09-01 12:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1454</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>NQRW</td>\n",
       "      <td>BMT</td>\n",
       "      <td>09/01/2021</td>\n",
       "      <td>08:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>506710</td>\n",
       "      <td>1718633</td>\n",
       "      <td>2021-09-01 08:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1453</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>NQRW</td>\n",
       "      <td>BMT</td>\n",
       "      <td>09/01/2021</td>\n",
       "      <td>04:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>506705</td>\n",
       "      <td>1718481</td>\n",
       "      <td>2021-09-01 04:00:00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       C/A  UNIT       SCP     STATION LINENAME DIVISION        DATE  \\\n",
       "1457  A011  R080  01-00-00  57 ST-7 AV     NQRW      BMT  09/01/2021   \n",
       "1456  A011  R080  01-00-00  57 ST-7 AV     NQRW      BMT  09/01/2021   \n",
       "1455  A011  R080  01-00-00  57 ST-7 AV     NQRW      BMT  09/01/2021   \n",
       "1454  A011  R080  01-00-00  57 ST-7 AV     NQRW      BMT  09/01/2021   \n",
       "1453  A011  R080  01-00-00  57 ST-7 AV     NQRW      BMT  09/01/2021   \n",
       "\n",
       "          TIME     DESC  ENTRIES  \\\n",
       "1457  20:00:00  REGULAR   506825   \n",
       "1456  16:00:00  REGULAR   506775   \n",
       "1455  12:00:00  REGULAR   506736   \n",
       "1454  08:00:00  REGULAR   506710   \n",
       "1453  04:00:00  REGULAR   506705   \n",
       "\n",
       "      EXITS                                                                 \\\n",
       "1457                                            1719468                      \n",
       "1456                                            1719232                      \n",
       "1455                                            1718999                      \n",
       "1454                                            1718633                      \n",
       "1453                                            1718481                      \n",
       "\n",
       "               DATE_TIME  \n",
       "1457 2021-09-01 20:00:00  \n",
       "1456 2021-09-01 16:00:00  \n",
       "1455 2021-09-01 12:00:00  \n",
       "1454 2021-09-01 08:00:00  \n",
       "1453 2021-09-01 04:00:00  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# What's the deal with counter being in reverse\n",
    "mask = ((turnstiles_df[\"C/A\"] == \"A011\") & \n",
    "(turnstiles_df[\"UNIT\"] == \"R080\") & \n",
    "(turnstiles_df[\"SCP\"] == \"01-00-00\") & \n",
    "(turnstiles_df[\"STATION\"] == \"57 ST-7 AV\") &\n",
    "(turnstiles_df[\"DATE_TIME\"].dt.date == datetime.datetime(2021, 9, 1).date()))\n",
    "turnstiles_df[mask].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "53f530d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "mask = ((turnstiles_df[\"C/A\"] == \"R228\") & \n",
    "(turnstiles_df[\"UNIT\"] == \"R143\") & \n",
    "(turnstiles_df[\"SCP\"] == \"00-00-05\") & \n",
    "(turnstiles_df[\"STATION\"] == \"28 ST\") &\n",
    "(turnstiles_df[\"DATE_TIME\"].dt.date == datetime.datetime(2021, 7, 18).date()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "94a0b69a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>LINENAME</th>\n",
       "      <th>DIVISION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>TIME</th>\n",
       "      <th>DESC</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "      <th>DATE_TIME</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>158526</th>\n",
       "      <td>R228</td>\n",
       "      <td>R143</td>\n",
       "      <td>00-00-05</td>\n",
       "      <td>28 ST</td>\n",
       "      <td>6</td>\n",
       "      <td>IRT</td>\n",
       "      <td>07/18/2021</td>\n",
       "      <td>21:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7329905</td>\n",
       "      <td>5768684</td>\n",
       "      <td>2021-07-18 21:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>158525</th>\n",
       "      <td>R228</td>\n",
       "      <td>R143</td>\n",
       "      <td>00-00-05</td>\n",
       "      <td>28 ST</td>\n",
       "      <td>6</td>\n",
       "      <td>IRT</td>\n",
       "      <td>07/18/2021</td>\n",
       "      <td>17:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7329858</td>\n",
       "      <td>5768600</td>\n",
       "      <td>2021-07-18 17:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>158524</th>\n",
       "      <td>R228</td>\n",
       "      <td>R143</td>\n",
       "      <td>00-00-05</td>\n",
       "      <td>28 ST</td>\n",
       "      <td>6</td>\n",
       "      <td>IRT</td>\n",
       "      <td>07/18/2021</td>\n",
       "      <td>13:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7329779</td>\n",
       "      <td>5768459</td>\n",
       "      <td>2021-07-18 13:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>158523</th>\n",
       "      <td>R228</td>\n",
       "      <td>R143</td>\n",
       "      <td>00-00-05</td>\n",
       "      <td>28 ST</td>\n",
       "      <td>6</td>\n",
       "      <td>IRT</td>\n",
       "      <td>07/18/2021</td>\n",
       "      <td>09:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7329757</td>\n",
       "      <td>5768336</td>\n",
       "      <td>2021-07-18 09:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>158522</th>\n",
       "      <td>R228</td>\n",
       "      <td>R143</td>\n",
       "      <td>00-00-05</td>\n",
       "      <td>28 ST</td>\n",
       "      <td>6</td>\n",
       "      <td>IRT</td>\n",
       "      <td>07/18/2021</td>\n",
       "      <td>05:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>7329743</td>\n",
       "      <td>5768311</td>\n",
       "      <td>2021-07-18 05:00:00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         C/A  UNIT       SCP STATION LINENAME DIVISION        DATE      TIME  \\\n",
       "158526  R228  R143  00-00-05   28 ST        6      IRT  07/18/2021  21:00:00   \n",
       "158525  R228  R143  00-00-05   28 ST        6      IRT  07/18/2021  17:00:00   \n",
       "158524  R228  R143  00-00-05   28 ST        6      IRT  07/18/2021  13:00:00   \n",
       "158523  R228  R143  00-00-05   28 ST        6      IRT  07/18/2021  09:00:00   \n",
       "158522  R228  R143  00-00-05   28 ST        6      IRT  07/18/2021  05:00:00   \n",
       "\n",
       "           DESC  ENTRIES  \\\n",
       "158526  REGULAR  7329905   \n",
       "158525  REGULAR  7329858   \n",
       "158524  REGULAR  7329779   \n",
       "158523  REGULAR  7329757   \n",
       "158522  REGULAR  7329743   \n",
       "\n",
       "        EXITS                                                                 \\\n",
       "158526                                            5768684                      \n",
       "158525                                            5768600                      \n",
       "158524                                            5768459                      \n",
       "158523                                            5768336                      \n",
       "158522                                            5768311                      \n",
       "\n",
       "                 DATE_TIME  \n",
       "158526 2021-07-18 21:00:00  \n",
       "158525 2021-07-18 17:00:00  \n",
       "158524 2021-07-18 13:00:00  \n",
       "158523 2021-07-18 09:00:00  \n",
       "158522 2021-07-18 05:00:00  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "turnstiles_df[mask].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "3dcee75e",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "mask = ((turnstiles_df[\"C/A\"] == \"R311\") & \n",
    "(turnstiles_df[\"UNIT\"] == \"R053\") & \n",
    "(turnstiles_df[\"SCP\"] == \"00-05-01\") & \n",
    "(turnstiles_df[\"STATION\"] == \"3 AV-149 ST\") &\n",
    "(turnstiles_df[\"DATE_TIME\"].dt.date == datetime.datetime(2021, 7, 23).date()))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "39309b6a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>LINENAME</th>\n",
       "      <th>DIVISION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>TIME</th>\n",
       "      <th>DESC</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "      <th>DATE_TIME</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>176065</th>\n",
       "      <td>R311</td>\n",
       "      <td>R053</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>3 AV-149 ST</td>\n",
       "      <td>25</td>\n",
       "      <td>IRT</td>\n",
       "      <td>07/23/2021</td>\n",
       "      <td>20:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>0</td>\n",
       "      <td>660</td>\n",
       "      <td>2021-07-23 20:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176064</th>\n",
       "      <td>R311</td>\n",
       "      <td>R053</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>3 AV-149 ST</td>\n",
       "      <td>25</td>\n",
       "      <td>IRT</td>\n",
       "      <td>07/23/2021</td>\n",
       "      <td>16:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>0</td>\n",
       "      <td>660</td>\n",
       "      <td>2021-07-23 16:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176063</th>\n",
       "      <td>R311</td>\n",
       "      <td>R053</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>3 AV-149 ST</td>\n",
       "      <td>25</td>\n",
       "      <td>IRT</td>\n",
       "      <td>07/23/2021</td>\n",
       "      <td>12:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>0</td>\n",
       "      <td>660</td>\n",
       "      <td>2021-07-23 12:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176062</th>\n",
       "      <td>R311</td>\n",
       "      <td>R053</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>3 AV-149 ST</td>\n",
       "      <td>25</td>\n",
       "      <td>IRT</td>\n",
       "      <td>07/23/2021</td>\n",
       "      <td>08:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>0</td>\n",
       "      <td>660</td>\n",
       "      <td>2021-07-23 08:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176061</th>\n",
       "      <td>R311</td>\n",
       "      <td>R053</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>3 AV-149 ST</td>\n",
       "      <td>25</td>\n",
       "      <td>IRT</td>\n",
       "      <td>07/23/2021</td>\n",
       "      <td>04:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>0</td>\n",
       "      <td>660</td>\n",
       "      <td>2021-07-23 04:00:00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         C/A  UNIT       SCP      STATION LINENAME DIVISION        DATE  \\\n",
       "176065  R311  R053  00-05-01  3 AV-149 ST       25      IRT  07/23/2021   \n",
       "176064  R311  R053  00-05-01  3 AV-149 ST       25      IRT  07/23/2021   \n",
       "176063  R311  R053  00-05-01  3 AV-149 ST       25      IRT  07/23/2021   \n",
       "176062  R311  R053  00-05-01  3 AV-149 ST       25      IRT  07/23/2021   \n",
       "176061  R311  R053  00-05-01  3 AV-149 ST       25      IRT  07/23/2021   \n",
       "\n",
       "            TIME     DESC  ENTRIES  \\\n",
       "176065  20:00:00  REGULAR        0   \n",
       "176064  16:00:00  REGULAR        0   \n",
       "176063  12:00:00  REGULAR        0   \n",
       "176062  08:00:00  REGULAR        0   \n",
       "176061  04:00:00  REGULAR        0   \n",
       "\n",
       "        EXITS                                                                 \\\n",
       "176065                                                660                      \n",
       "176064                                                660                      \n",
       "176063                                                660                      \n",
       "176062                                                660                      \n",
       "176061                                                660                      \n",
       "\n",
       "                 DATE_TIME  \n",
       "176065 2021-07-23 20:00:00  \n",
       "176064 2021-07-23 16:00:00  \n",
       "176063 2021-07-23 12:00:00  \n",
       "176062 2021-07-23 08:00:00  \n",
       "176061 2021-07-23 04:00:00  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "turnstiles_df[mask].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "0059f0ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "turnstiles_daily = (turnstiles_df.groupby([\"C/A\", \"UNIT\", \"SCP\", \"STATION\", \"DATE\"],as_index=False).ENTRIES.first().sort_values(\"ENTRIES\", ascending=False))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "4e6d3ccf",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>ENTRIES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>85098</th>\n",
       "      <td>J003</td>\n",
       "      <td>R352</td>\n",
       "      <td>00-00-00</td>\n",
       "      <td>HEWES ST</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>2147406790</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85099</th>\n",
       "      <td>J003</td>\n",
       "      <td>R352</td>\n",
       "      <td>00-00-00</td>\n",
       "      <td>HEWES ST</td>\n",
       "      <td>06/27/2021</td>\n",
       "      <td>2147406559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85100</th>\n",
       "      <td>J003</td>\n",
       "      <td>R352</td>\n",
       "      <td>00-00-00</td>\n",
       "      <td>HEWES ST</td>\n",
       "      <td>06/28/2021</td>\n",
       "      <td>2147406196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85101</th>\n",
       "      <td>J003</td>\n",
       "      <td>R352</td>\n",
       "      <td>00-00-00</td>\n",
       "      <td>HEWES ST</td>\n",
       "      <td>06/29/2021</td>\n",
       "      <td>2147405821</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85102</th>\n",
       "      <td>J003</td>\n",
       "      <td>R352</td>\n",
       "      <td>00-00-00</td>\n",
       "      <td>HEWES ST</td>\n",
       "      <td>06/30/2021</td>\n",
       "      <td>2147405430</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        C/A  UNIT       SCP   STATION        DATE     ENTRIES\n",
       "85098  J003  R352  00-00-00  HEWES ST  06/26/2021  2147406790\n",
       "85099  J003  R352  00-00-00  HEWES ST  06/27/2021  2147406559\n",
       "85100  J003  R352  00-00-00  HEWES ST  06/28/2021  2147406196\n",
       "85101  J003  R352  00-00-00  HEWES ST  06/29/2021  2147405821\n",
       "85102  J003  R352  00-00-00  HEWES ST  06/30/2021  2147405430"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "turnstiles_daily.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "23b5f920",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>ENTRIES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>204837</th>\n",
       "      <td>N405</td>\n",
       "      <td>R239</td>\n",
       "      <td>00-03-01</td>\n",
       "      <td>GREENPOINT AV</td>\n",
       "      <td>09/22/2021</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>204838</th>\n",
       "      <td>N405</td>\n",
       "      <td>R239</td>\n",
       "      <td>00-03-01</td>\n",
       "      <td>GREENPOINT AV</td>\n",
       "      <td>09/23/2021</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>204839</th>\n",
       "      <td>N405</td>\n",
       "      <td>R239</td>\n",
       "      <td>00-03-01</td>\n",
       "      <td>GREENPOINT AV</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245184</th>\n",
       "      <td>N603</td>\n",
       "      <td>R303</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>21 ST-QNSBRIDGE</td>\n",
       "      <td>09/01/2021</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>197030</th>\n",
       "      <td>N338</td>\n",
       "      <td>R128</td>\n",
       "      <td>01-05-01</td>\n",
       "      <td>SUTPHIN BLVD</td>\n",
       "      <td>07/12/2021</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         C/A  UNIT       SCP          STATION        DATE  ENTRIES\n",
       "204837  N405  R239  00-03-01    GREENPOINT AV  09/22/2021        0\n",
       "204838  N405  R239  00-03-01    GREENPOINT AV  09/23/2021        0\n",
       "204839  N405  R239  00-03-01    GREENPOINT AV  09/24/2021        0\n",
       "245184  N603  R303  00-05-01  21 ST-QNSBRIDGE  09/01/2021        0\n",
       "197030  N338  R128  01-05-01     SUTPHIN BLVD  07/12/2021        0"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "turnstiles_daily.tail()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "df196551",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-30-3a945374269e>:1: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.\n",
      "  turnstiles_daily[[\"PREV_DATE\", \"PREV_ENTRIES\"]] = (turnstiles_daily\n"
     ]
    }
   ],
   "source": [
    "turnstiles_daily[[\"PREV_DATE\", \"PREV_ENTRIES\"]] = (turnstiles_daily\n",
    "                                                       .groupby([\"C/A\", \"UNIT\", \"SCP\", \"STATION\"])[\"DATE\", \"ENTRIES\"]\n",
    "                                                       .apply(lambda grp: grp.shift(1)))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "643d8d6e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop the rows for the earliest date in the df\n",
    "turnstiles_daily.dropna(subset=[\"PREV_DATE\"], axis=0, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "0bbb1b60",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>PREV_DATE</th>\n",
       "      <th>PREV_ENTRIES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>85099</th>\n",
       "      <td>J003</td>\n",
       "      <td>R352</td>\n",
       "      <td>00-00-00</td>\n",
       "      <td>HEWES ST</td>\n",
       "      <td>06/27/2021</td>\n",
       "      <td>2147406559</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>2.147407e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85100</th>\n",
       "      <td>J003</td>\n",
       "      <td>R352</td>\n",
       "      <td>00-00-00</td>\n",
       "      <td>HEWES ST</td>\n",
       "      <td>06/28/2021</td>\n",
       "      <td>2147406196</td>\n",
       "      <td>06/27/2021</td>\n",
       "      <td>2.147407e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85101</th>\n",
       "      <td>J003</td>\n",
       "      <td>R352</td>\n",
       "      <td>00-00-00</td>\n",
       "      <td>HEWES ST</td>\n",
       "      <td>06/29/2021</td>\n",
       "      <td>2147405821</td>\n",
       "      <td>06/28/2021</td>\n",
       "      <td>2.147406e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85102</th>\n",
       "      <td>J003</td>\n",
       "      <td>R352</td>\n",
       "      <td>00-00-00</td>\n",
       "      <td>HEWES ST</td>\n",
       "      <td>06/30/2021</td>\n",
       "      <td>2147405430</td>\n",
       "      <td>06/29/2021</td>\n",
       "      <td>2.147406e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85103</th>\n",
       "      <td>J003</td>\n",
       "      <td>R352</td>\n",
       "      <td>00-00-00</td>\n",
       "      <td>HEWES ST</td>\n",
       "      <td>07/01/2021</td>\n",
       "      <td>2147405044</td>\n",
       "      <td>06/30/2021</td>\n",
       "      <td>2.147405e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        C/A  UNIT       SCP   STATION        DATE     ENTRIES   PREV_DATE  \\\n",
       "85099  J003  R352  00-00-00  HEWES ST  06/27/2021  2147406559  06/26/2021   \n",
       "85100  J003  R352  00-00-00  HEWES ST  06/28/2021  2147406196  06/27/2021   \n",
       "85101  J003  R352  00-00-00  HEWES ST  06/29/2021  2147405821  06/28/2021   \n",
       "85102  J003  R352  00-00-00  HEWES ST  06/30/2021  2147405430  06/29/2021   \n",
       "85103  J003  R352  00-00-00  HEWES ST  07/01/2021  2147405044  06/30/2021   \n",
       "\n",
       "       PREV_ENTRIES  \n",
       "85099  2.147407e+09  \n",
       "85100  2.147407e+09  \n",
       "85101  2.147406e+09  \n",
       "85102  2.147406e+09  \n",
       "85103  2.147405e+09  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "turnstiles_daily[turnstiles_daily[\"ENTRIES\"] < turnstiles_daily[\"PREV_ENTRIES\"]].head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "b302c5e2",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>LINENAME</th>\n",
       "      <th>DIVISION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>TIME</th>\n",
       "      <th>DESC</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "      <th>DATE_TIME</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1457</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>NQRW</td>\n",
       "      <td>BMT</td>\n",
       "      <td>09/01/2021</td>\n",
       "      <td>20:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>506825</td>\n",
       "      <td>1719468</td>\n",
       "      <td>2021-09-01 20:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1456</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>NQRW</td>\n",
       "      <td>BMT</td>\n",
       "      <td>09/01/2021</td>\n",
       "      <td>16:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>506775</td>\n",
       "      <td>1719232</td>\n",
       "      <td>2021-09-01 16:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1455</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>NQRW</td>\n",
       "      <td>BMT</td>\n",
       "      <td>09/01/2021</td>\n",
       "      <td>12:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>506736</td>\n",
       "      <td>1718999</td>\n",
       "      <td>2021-09-01 12:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1454</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>NQRW</td>\n",
       "      <td>BMT</td>\n",
       "      <td>09/01/2021</td>\n",
       "      <td>08:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>506710</td>\n",
       "      <td>1718633</td>\n",
       "      <td>2021-09-01 08:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1453</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>NQRW</td>\n",
       "      <td>BMT</td>\n",
       "      <td>09/01/2021</td>\n",
       "      <td>04:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>506705</td>\n",
       "      <td>1718481</td>\n",
       "      <td>2021-09-01 04:00:00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       C/A  UNIT       SCP     STATION LINENAME DIVISION        DATE  \\\n",
       "1457  A011  R080  01-00-00  57 ST-7 AV     NQRW      BMT  09/01/2021   \n",
       "1456  A011  R080  01-00-00  57 ST-7 AV     NQRW      BMT  09/01/2021   \n",
       "1455  A011  R080  01-00-00  57 ST-7 AV     NQRW      BMT  09/01/2021   \n",
       "1454  A011  R080  01-00-00  57 ST-7 AV     NQRW      BMT  09/01/2021   \n",
       "1453  A011  R080  01-00-00  57 ST-7 AV     NQRW      BMT  09/01/2021   \n",
       "\n",
       "          TIME     DESC  ENTRIES  \\\n",
       "1457  20:00:00  REGULAR   506825   \n",
       "1456  16:00:00  REGULAR   506775   \n",
       "1455  12:00:00  REGULAR   506736   \n",
       "1454  08:00:00  REGULAR   506710   \n",
       "1453  04:00:00  REGULAR   506705   \n",
       "\n",
       "      EXITS                                                                 \\\n",
       "1457                                            1719468                      \n",
       "1456                                            1719232                      \n",
       "1455                                            1718999                      \n",
       "1454                                            1718633                      \n",
       "1453                                            1718481                      \n",
       "\n",
       "               DATE_TIME  \n",
       "1457 2021-09-01 20:00:00  \n",
       "1456 2021-09-01 16:00:00  \n",
       "1455 2021-09-01 12:00:00  \n",
       "1454 2021-09-01 08:00:00  \n",
       "1453 2021-09-01 04:00:00  "
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# What's the deal with counter being in reverse\n",
    "mask = ((turnstiles_df[\"C/A\"] == \"A011\") & \n",
    "(turnstiles_df[\"UNIT\"] == \"R080\") & \n",
    "(turnstiles_df[\"SCP\"] == \"01-00-00\") & \n",
    "(turnstiles_df[\"STATION\"] == \"57 ST-7 AV\") &\n",
    "(turnstiles_df[\"DATE_TIME\"].dt.date == datetime.datetime(2021, 9, 1).date()))\n",
    "turnstiles_df[mask].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "8d415603",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "C/A    UNIT  SCP       STATION      \n",
       "A002   R051  02-00-00  59 ST            90\n",
       "             02-00-01  59 ST            90\n",
       "             02-03-00  59 ST            90\n",
       "             02-03-01  59 ST            90\n",
       "             02-03-02  59 ST            90\n",
       "                                        ..\n",
       "TRAM2  R469  00-00-00  RIT-ROOSEVELT    90\n",
       "             00-00-01  RIT-ROOSEVELT    90\n",
       "             00-03-00  RIT-ROOSEVELT    89\n",
       "             00-03-01  RIT-ROOSEVELT    89\n",
       "             00-05-00  RIT-ROOSEVELT     1\n",
       "Length: 4760, dtype: int64"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Let's see how many stations have this problem\n",
    "\n",
    "(turnstiles_daily[turnstiles_daily[\"ENTRIES\"] < turnstiles_daily[\"PREV_ENTRIES\"]]\n",
    "    .groupby([\"C/A\", \"UNIT\", \"SCP\", \"STATION\"])\n",
    "    .size())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "53c418b7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "146746170 1089956731.0\n",
      "3740789 1189015484.0\n",
      "3545006 51722930.0\n",
      "1278639 8085750.0\n",
      "1037157 16777220.0\n",
      "809020 7979566.0\n",
      "798740 201331968.0\n",
      "774522 9379798.0\n",
      "702266 167790157.0\n",
      "373574 7561470.0\n",
      "346213 13968508.0\n",
      "327766 50346223.0\n",
      "327696 67109632.0\n",
      "261321 1883870.0\n",
      "251769 50362839.0\n",
      "188178 33565227.0\n",
      "119337 3438857.0\n",
      "81608 1918463.0\n",
      "55517 8028685.0\n",
      "53273 5385746.0\n",
      "52785 3135089.0\n",
      "39510 10729404.0\n",
      "39027 4290424.0\n",
      "34259 909043036.0\n",
      "31420 4775477.0\n",
      "27250 3086735.0\n",
      "26509 15661161.0\n",
      "25814 15999749.0\n",
      "17892 6194584.0\n",
      "17013 3221238.0\n",
      "12745 1383097184.0\n",
      "12078 8705354.0\n",
      "10936 705347143.0\n",
      "10766 11123659.0\n",
      "9614 2011838.0\n",
      "8270 9687646.0\n",
      "6602 5515480.0\n",
      "6023 1943591.0\n",
      "5161 6241804.0\n",
      "4901 7672427.0\n",
      "4133 6478961.0\n",
      "3561 2557789.0\n",
      "3558 1672437.0\n",
      "3512 5744292.0\n",
      "2182 1252236.0\n",
      "2149 1040921584.0\n",
      "1323 1195859.0\n",
      "955 3150495.0\n",
      "635 3946714.0\n",
      "15 67109632.0\n",
      "0 117440512.0\n"
     ]
    }
   ],
   "source": [
    "def get_daily_counts(row, max_counter):\n",
    "    counter = abs(row[\"ENTRIES\"] - row[\"PREV_ENTRIES\"])\n",
    "    if counter < 0:\n",
    "        counter = -counter\n",
    "    if counter > max_counter:\n",
    "        print(row[\"ENTRIES\"], row[\"PREV_ENTRIES\"])\n",
    "        return 0\n",
    "    return counter\n",
    "\n",
    "# If counter is > 1Million, then the counter might have been reset.  \n",
    "# Just set it to zero as different counters have different cycle limits\n",
    "_ = turnstiles_daily.apply(get_daily_counts, axis=1, max_counter=1000000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "5bdfcb87",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "146746170 1089956731.0\n",
      "3740789 1189015484.0\n",
      "3545006 51722930.0\n",
      "1278639 8085750.0\n",
      "1037157 16777220.0\n",
      "809020 7979566.0\n",
      "798740 201331968.0\n",
      "774522 9379798.0\n",
      "702266 167790157.0\n",
      "373574 7561470.0\n",
      "346213 13968508.0\n",
      "327766 50346223.0\n",
      "327696 67109632.0\n",
      "261321 1883870.0\n",
      "251769 50362839.0\n",
      "188178 33565227.0\n",
      "119337 3438857.0\n",
      "81608 1918463.0\n",
      "55517 8028685.0\n",
      "53273 5385746.0\n",
      "52785 3135089.0\n",
      "39510 10729404.0\n",
      "39027 4290424.0\n",
      "34259 909043036.0\n",
      "31420 4775477.0\n",
      "27250 3086735.0\n",
      "26509 15661161.0\n",
      "25814 15999749.0\n",
      "17892 6194584.0\n",
      "17013 3221238.0\n",
      "12745 1383097184.0\n",
      "12078 8705354.0\n",
      "10936 705347143.0\n",
      "10766 11123659.0\n",
      "9614 2011838.0\n",
      "8270 9687646.0\n",
      "6602 5515480.0\n",
      "6023 1943591.0\n",
      "5161 6241804.0\n",
      "4901 7672427.0\n",
      "4133 6478961.0\n",
      "3561 2557789.0\n",
      "3558 1672437.0\n",
      "3512 5744292.0\n",
      "2182 1252236.0\n",
      "2149 1040921584.0\n",
      "1323 1195859.0\n",
      "955 3150495.0\n",
      "635 3946714.0\n",
      "15 67109632.0\n",
      "0 117440512.0\n"
     ]
    }
   ],
   "source": [
    "def get_daily_counts(row, max_counter):\n",
    "    counter = (row[\"ENTRIES\"] - row[\"PREV_ENTRIES\"])\n",
    "    if counter < 0:\n",
    "        # Maybe counter is reversed?\n",
    "        counter = -counter\n",
    "    if counter > max_counter:\n",
    "        # Maybe counter was reset to 0? \n",
    "        print(row[\"ENTRIES\"], row[\"PREV_ENTRIES\"])\n",
    "        counter = min(row[\"ENTRIES\"], row[\"PREV_ENTRIES\"])\n",
    "    if counter > max_counter:\n",
    "        # Check it again to make sure we're not still giving a counter that's too big\n",
    "        return 0\n",
    "    return counter\n",
    "\n",
    "# If counter is > 1Million, then the counter might have been reset.  \n",
    "# Just set it to zero as different counters have different cycle limits\n",
    "# It'd probably be a good idea to use a number even significantly smaller than 1 million as the limit!\n",
    "turnstiles_daily[\"DAILY_ENTRIES\"] = turnstiles_daily.apply(get_daily_counts, axis=1, max_counter=1000000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "2089f687",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>PREV_DATE</th>\n",
       "      <th>PREV_ENTRIES</th>\n",
       "      <th>DAILY_ENTRIES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>85099</th>\n",
       "      <td>J003</td>\n",
       "      <td>R352</td>\n",
       "      <td>00-00-00</td>\n",
       "      <td>HEWES ST</td>\n",
       "      <td>06/27/2021</td>\n",
       "      <td>2147406559</td>\n",
       "      <td>06/26/2021</td>\n",
       "      <td>2.147407e+09</td>\n",
       "      <td>231.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85100</th>\n",
       "      <td>J003</td>\n",
       "      <td>R352</td>\n",
       "      <td>00-00-00</td>\n",
       "      <td>HEWES ST</td>\n",
       "      <td>06/28/2021</td>\n",
       "      <td>2147406196</td>\n",
       "      <td>06/27/2021</td>\n",
       "      <td>2.147407e+09</td>\n",
       "      <td>363.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85101</th>\n",
       "      <td>J003</td>\n",
       "      <td>R352</td>\n",
       "      <td>00-00-00</td>\n",
       "      <td>HEWES ST</td>\n",
       "      <td>06/29/2021</td>\n",
       "      <td>2147405821</td>\n",
       "      <td>06/28/2021</td>\n",
       "      <td>2.147406e+09</td>\n",
       "      <td>375.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85102</th>\n",
       "      <td>J003</td>\n",
       "      <td>R352</td>\n",
       "      <td>00-00-00</td>\n",
       "      <td>HEWES ST</td>\n",
       "      <td>06/30/2021</td>\n",
       "      <td>2147405430</td>\n",
       "      <td>06/29/2021</td>\n",
       "      <td>2.147406e+09</td>\n",
       "      <td>391.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85103</th>\n",
       "      <td>J003</td>\n",
       "      <td>R352</td>\n",
       "      <td>00-00-00</td>\n",
       "      <td>HEWES ST</td>\n",
       "      <td>07/01/2021</td>\n",
       "      <td>2147405044</td>\n",
       "      <td>06/30/2021</td>\n",
       "      <td>2.147405e+09</td>\n",
       "      <td>386.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        C/A  UNIT       SCP   STATION        DATE     ENTRIES   PREV_DATE  \\\n",
       "85099  J003  R352  00-00-00  HEWES ST  06/27/2021  2147406559  06/26/2021   \n",
       "85100  J003  R352  00-00-00  HEWES ST  06/28/2021  2147406196  06/27/2021   \n",
       "85101  J003  R352  00-00-00  HEWES ST  06/29/2021  2147405821  06/28/2021   \n",
       "85102  J003  R352  00-00-00  HEWES ST  06/30/2021  2147405430  06/29/2021   \n",
       "85103  J003  R352  00-00-00  HEWES ST  07/01/2021  2147405044  06/30/2021   \n",
       "\n",
       "       PREV_ENTRIES  DAILY_ENTRIES  \n",
       "85099  2.147407e+09          231.0  \n",
       "85100  2.147407e+09          363.0  \n",
       "85101  2.147406e+09          375.0  \n",
       "85102  2.147406e+09          391.0  \n",
       "85103  2.147405e+09          386.0  "
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "turnstiles_daily.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "7ac40480",
   "metadata": {},
   "outputs": [],
   "source": [
    "turnstiles_df[\"TIME_INTERVAL\"] = (\n",
    "    np.where( (turnstiles_df.DATE_TIME.dt.hour <= 4), \"Midnight\"\n",
    "         ,np.where(\n",
    "             (turnstiles_df.DATE_TIME.dt.hour <= 8), \"early_Morning\"\n",
    "             ,np.where(\n",
    "                 (turnstiles_df.DATE_TIME.dt.hour <= 12), \"Morning\"\n",
    "                 ,np.where(\n",
    "                     (turnstiles_df.DATE_TIME.dt.hour <= 16), \"Afternoon\"\n",
    "                     ,np.where(\n",
    "                         (turnstiles_df.DATE_TIME.dt.hour <= 20), \"evening\"\n",
    "                         ,\"Night\"))))))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "b4d00aa2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>LINENAME</th>\n",
       "      <th>DIVISION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>TIME</th>\n",
       "      <th>DESC</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>EXITS</th>\n",
       "      <th>DATE_TIME</th>\n",
       "      <th>TIME_INTERVAL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>210399</th>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>R</td>\n",
       "      <td>RIT</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>21:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>5554</td>\n",
       "      <td>646</td>\n",
       "      <td>2021-09-24 21:00:00</td>\n",
       "      <td>Night</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210398</th>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>R</td>\n",
       "      <td>RIT</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>17:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>5554</td>\n",
       "      <td>646</td>\n",
       "      <td>2021-09-24 17:00:00</td>\n",
       "      <td>evening</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210397</th>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>R</td>\n",
       "      <td>RIT</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>13:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>5554</td>\n",
       "      <td>645</td>\n",
       "      <td>2021-09-24 13:00:00</td>\n",
       "      <td>Afternoon</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210396</th>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>R</td>\n",
       "      <td>RIT</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>09:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>5554</td>\n",
       "      <td>645</td>\n",
       "      <td>2021-09-24 09:00:00</td>\n",
       "      <td>Morning</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210395</th>\n",
       "      <td>TRAM2</td>\n",
       "      <td>R469</td>\n",
       "      <td>00-05-01</td>\n",
       "      <td>RIT-ROOSEVELT</td>\n",
       "      <td>R</td>\n",
       "      <td>RIT</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>05:00:00</td>\n",
       "      <td>REGULAR</td>\n",
       "      <td>5554</td>\n",
       "      <td>645</td>\n",
       "      <td>2021-09-24 05:00:00</td>\n",
       "      <td>early_Morning</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          C/A  UNIT       SCP        STATION LINENAME DIVISION        DATE  \\\n",
       "210399  TRAM2  R469  00-05-01  RIT-ROOSEVELT        R      RIT  09/24/2021   \n",
       "210398  TRAM2  R469  00-05-01  RIT-ROOSEVELT        R      RIT  09/24/2021   \n",
       "210397  TRAM2  R469  00-05-01  RIT-ROOSEVELT        R      RIT  09/24/2021   \n",
       "210396  TRAM2  R469  00-05-01  RIT-ROOSEVELT        R      RIT  09/24/2021   \n",
       "210395  TRAM2  R469  00-05-01  RIT-ROOSEVELT        R      RIT  09/24/2021   \n",
       "\n",
       "            TIME     DESC  ENTRIES  \\\n",
       "210399  21:00:00  REGULAR     5554   \n",
       "210398  17:00:00  REGULAR     5554   \n",
       "210397  13:00:00  REGULAR     5554   \n",
       "210396  09:00:00  REGULAR     5554   \n",
       "210395  05:00:00  REGULAR     5554   \n",
       "\n",
       "        EXITS                                                                 \\\n",
       "210399                                                646                      \n",
       "210398                                                646                      \n",
       "210397                                                645                      \n",
       "210396                                                645                      \n",
       "210395                                                645                      \n",
       "\n",
       "                 DATE_TIME  TIME_INTERVAL  \n",
       "210399 2021-09-24 21:00:00          Night  \n",
       "210398 2021-09-24 17:00:00        evening  \n",
       "210397 2021-09-24 13:00:00      Afternoon  \n",
       "210396 2021-09-24 09:00:00        Morning  \n",
       "210395 2021-09-24 05:00:00  early_Morning  "
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "turnstiles_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "eabf6791",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>DAILY_ENTRIES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>62875</th>\n",
       "      <td>R528</td>\n",
       "      <td>R097</td>\n",
       "      <td>JUNCTION BLVD</td>\n",
       "      <td>09/17/2021</td>\n",
       "      <td>1121370.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41176</th>\n",
       "      <td>PTH17</td>\n",
       "      <td>R541</td>\n",
       "      <td>THIRTY THIRD ST</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>1059989.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43800</th>\n",
       "      <td>R123</td>\n",
       "      <td>R290</td>\n",
       "      <td>HOUSTON ST</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>935537.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41629</th>\n",
       "      <td>PTH22</td>\n",
       "      <td>R540</td>\n",
       "      <td>PATH NEW WTC</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>901891.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62882</th>\n",
       "      <td>R528</td>\n",
       "      <td>R097</td>\n",
       "      <td>JUNCTION BLVD</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>812578.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57716</th>\n",
       "      <td>R327</td>\n",
       "      <td>R361</td>\n",
       "      <td>PELHAM PKWY</td>\n",
       "      <td>09/05/2021</td>\n",
       "      <td>799080.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11806</th>\n",
       "      <td>H010</td>\n",
       "      <td>R235</td>\n",
       "      <td>BEDFORD AV</td>\n",
       "      <td>08/26/2021</td>\n",
       "      <td>704084.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35131</th>\n",
       "      <td>N519</td>\n",
       "      <td>R461</td>\n",
       "      <td>B'WAY-LAFAYETTE</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>617742.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40463</th>\n",
       "      <td>PTH07</td>\n",
       "      <td>R550</td>\n",
       "      <td>CITY / BUS</td>\n",
       "      <td>07/09/2021</td>\n",
       "      <td>567365.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62700</th>\n",
       "      <td>R526</td>\n",
       "      <td>R096</td>\n",
       "      <td>82 ST-JACKSON H</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>498004.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         C/A  UNIT          STATION        DATE  DAILY_ENTRIES\n",
       "62875   R528  R097    JUNCTION BLVD  09/17/2021      1121370.0\n",
       "41176  PTH17  R541  THIRTY THIRD ST  09/24/2021      1059989.0\n",
       "43800   R123  R290       HOUSTON ST  09/24/2021       935537.0\n",
       "41629  PTH22  R540     PATH NEW WTC  09/24/2021       901891.0\n",
       "62882   R528  R097    JUNCTION BLVD  09/24/2021       812578.0\n",
       "57716   R327  R361      PELHAM PKWY  09/05/2021       799080.0\n",
       "11806   H010  R235       BEDFORD AV  08/26/2021       704084.0\n",
       "35131   N519  R461  B'WAY-LAFAYETTE  09/24/2021       617742.0\n",
       "40463  PTH07  R550       CITY / BUS  07/09/2021       567365.0\n",
       "62700   R526  R096  82 ST-JACKSON H  09/24/2021       498004.0"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "station_daily = turnstiles_daily.groupby([\"C/A\", \"UNIT\", \"STATION\", \"DATE\"])[['DAILY_ENTRIES']].sum().reset_index().sort_values(\"DAILY_ENTRIES\", ascending= False)\n",
    "station_daily.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "23df35d7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>DAILY_ENTRIES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>23526</th>\n",
       "      <td>JUNCTION BLVD</td>\n",
       "      <td>09/17/2021</td>\n",
       "      <td>1121370.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31927</th>\n",
       "      <td>THIRTY THIRD ST</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>1059989.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21992</th>\n",
       "      <td>HOUSTON ST</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>935537.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28581</th>\n",
       "      <td>PATH NEW WTC</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>901891.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10040</th>\n",
       "      <td>86 ST</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>826117.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23533</th>\n",
       "      <td>JUNCTION BLVD</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>812578.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28925</th>\n",
       "      <td>PELHAM PKWY</td>\n",
       "      <td>09/05/2021</td>\n",
       "      <td>801216.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13546</th>\n",
       "      <td>BEDFORD AV</td>\n",
       "      <td>08/26/2021</td>\n",
       "      <td>710094.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12304</th>\n",
       "      <td>B'WAY-LAFAYETTE</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>623765.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16663</th>\n",
       "      <td>CITY / BUS</td>\n",
       "      <td>07/09/2021</td>\n",
       "      <td>567365.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               STATION        DATE  DAILY_ENTRIES\n",
       "23526    JUNCTION BLVD  09/17/2021      1121370.0\n",
       "31927  THIRTY THIRD ST  09/24/2021      1059989.0\n",
       "21992       HOUSTON ST  09/24/2021       935537.0\n",
       "28581     PATH NEW WTC  09/24/2021       901891.0\n",
       "10040            86 ST  09/24/2021       826117.0\n",
       "23533    JUNCTION BLVD  09/24/2021       812578.0\n",
       "28925      PELHAM PKWY  09/05/2021       801216.0\n",
       "13546       BEDFORD AV  08/26/2021       710094.0\n",
       "12304  B'WAY-LAFAYETTE  09/24/2021       623765.0\n",
       "16663       CITY / BUS  07/09/2021       567365.0"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "station_daily = turnstiles_daily.groupby([\"STATION\" , \"DATE\"])[['DAILY_ENTRIES']].sum().reset_index().sort_values(\"DAILY_ENTRIES\", ascending= False)\n",
    "station_daily.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "e4d8baf4",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>STATION</th>\n",
       "      <th>DAILY_ENTRIES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>34 ST-PENN STA</td>\n",
       "      <td>4833324.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>FULTON ST</td>\n",
       "      <td>3818647.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>86 ST</td>\n",
       "      <td>3439391.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>JUNCTION BLVD</td>\n",
       "      <td>3269355.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>34 ST-HERALD SQ</td>\n",
       "      <td>3079289.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>GRD CNTRL-42 ST</td>\n",
       "      <td>2963137.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>42 ST-PORT AUTH</td>\n",
       "      <td>2749500.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>23 ST</td>\n",
       "      <td>2633567.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>14 ST-UNION SQ</td>\n",
       "      <td>2610014.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>72 ST</td>\n",
       "      <td>2594172.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           STATION  DAILY_ENTRIES\n",
       "0   34 ST-PENN STA      4833324.0\n",
       "1        FULTON ST      3818647.0\n",
       "2            86 ST      3439391.0\n",
       "3    JUNCTION BLVD      3269355.0\n",
       "4  34 ST-HERALD SQ      3079289.0\n",
       "5  GRD CNTRL-42 ST      2963137.0\n",
       "6  42 ST-PORT AUTH      2749500.0\n",
       "7            23 ST      2633567.0\n",
       "8   14 ST-UNION SQ      2610014.0\n",
       "9            72 ST      2594172.0"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "station_top_ten = station_daily.groupby('STATION').sum()\\\n",
    "    .sort_values('DAILY_ENTRIES', ascending=False)\\\n",
    "    .reset_index().head(10)\n",
    "\n",
    "station_top_ten"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "f133eb21",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 3000x2000 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15,10),dpi=200),\n",
    "plt.style.use('default')\n",
    "ax=sns.barplot(x=\"STATION\", y=\"DAILY_ENTRIES\", data=station_top_ten)\n",
    "plt.title(\"Top 10 Buiest Stations\", weight='bold', c=\"red\", fontsize=15)\n",
    "plt.xlabel(\"\", weight=\"bold\", c=\"k\")\n",
    "plt.xticks(rotation=0,weight='bold')\n",
    "plt.ylabel(\"Total Traffic\", weight='bold', c=\"k\")\n",
    "plt.ylim(0,5000000)\n",
    "plt.yticks(weight='bold')\n",
    "plt.savefig('Image_1_MTA.png', dpi=200)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "346e516d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>PREV_DATE</th>\n",
       "      <th>PREV_ENTRIES</th>\n",
       "      <th>DAILY_ENTRIES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3183</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/23/2021</td>\n",
       "      <td>511286</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>511513.0</td>\n",
       "      <td>227.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3182</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/22/2021</td>\n",
       "      <td>511013</td>\n",
       "      <td>09/23/2021</td>\n",
       "      <td>511286.0</td>\n",
       "      <td>273.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3181</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/21/2021</td>\n",
       "      <td>510787</td>\n",
       "      <td>09/22/2021</td>\n",
       "      <td>511013.0</td>\n",
       "      <td>226.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3180</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/20/2021</td>\n",
       "      <td>510521</td>\n",
       "      <td>09/21/2021</td>\n",
       "      <td>510787.0</td>\n",
       "      <td>266.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3179</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/19/2021</td>\n",
       "      <td>510305</td>\n",
       "      <td>09/20/2021</td>\n",
       "      <td>510521.0</td>\n",
       "      <td>216.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3178</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/18/2021</td>\n",
       "      <td>510142</td>\n",
       "      <td>09/19/2021</td>\n",
       "      <td>510305.0</td>\n",
       "      <td>163.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3177</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/17/2021</td>\n",
       "      <td>509949</td>\n",
       "      <td>09/18/2021</td>\n",
       "      <td>510142.0</td>\n",
       "      <td>193.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3176</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/16/2021</td>\n",
       "      <td>509704</td>\n",
       "      <td>09/17/2021</td>\n",
       "      <td>509949.0</td>\n",
       "      <td>245.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3175</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/15/2021</td>\n",
       "      <td>509487</td>\n",
       "      <td>09/16/2021</td>\n",
       "      <td>509704.0</td>\n",
       "      <td>217.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3174</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/14/2021</td>\n",
       "      <td>509251</td>\n",
       "      <td>09/15/2021</td>\n",
       "      <td>509487.0</td>\n",
       "      <td>236.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3173</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/13/2021</td>\n",
       "      <td>508998</td>\n",
       "      <td>09/14/2021</td>\n",
       "      <td>509251.0</td>\n",
       "      <td>253.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3172</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/12/2021</td>\n",
       "      <td>508753</td>\n",
       "      <td>09/13/2021</td>\n",
       "      <td>508998.0</td>\n",
       "      <td>245.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3171</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/11/2021</td>\n",
       "      <td>508580</td>\n",
       "      <td>09/12/2021</td>\n",
       "      <td>508753.0</td>\n",
       "      <td>173.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3170</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/10/2021</td>\n",
       "      <td>508412</td>\n",
       "      <td>09/11/2021</td>\n",
       "      <td>508580.0</td>\n",
       "      <td>168.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3169</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/09/2021</td>\n",
       "      <td>508166</td>\n",
       "      <td>09/10/2021</td>\n",
       "      <td>508412.0</td>\n",
       "      <td>246.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3168</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/08/2021</td>\n",
       "      <td>507953</td>\n",
       "      <td>09/09/2021</td>\n",
       "      <td>508166.0</td>\n",
       "      <td>213.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3167</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/07/2021</td>\n",
       "      <td>507743</td>\n",
       "      <td>09/08/2021</td>\n",
       "      <td>507953.0</td>\n",
       "      <td>210.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3166</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/06/2021</td>\n",
       "      <td>507520</td>\n",
       "      <td>09/07/2021</td>\n",
       "      <td>507743.0</td>\n",
       "      <td>223.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3165</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/05/2021</td>\n",
       "      <td>507381</td>\n",
       "      <td>09/06/2021</td>\n",
       "      <td>507520.0</td>\n",
       "      <td>139.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3164</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/04/2021</td>\n",
       "      <td>507248</td>\n",
       "      <td>09/05/2021</td>\n",
       "      <td>507381.0</td>\n",
       "      <td>133.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3163</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/03/2021</td>\n",
       "      <td>507115</td>\n",
       "      <td>09/04/2021</td>\n",
       "      <td>507248.0</td>\n",
       "      <td>133.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3162</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/02/2021</td>\n",
       "      <td>506944</td>\n",
       "      <td>09/03/2021</td>\n",
       "      <td>507115.0</td>\n",
       "      <td>171.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3161</th>\n",
       "      <td>A011</td>\n",
       "      <td>R080</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>57 ST-7 AV</td>\n",
       "      <td>09/01/2021</td>\n",
       "      <td>506825</td>\n",
       "      <td>09/02/2021</td>\n",
       "      <td>506944.0</td>\n",
       "      <td>119.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       C/A  UNIT       SCP     STATION        DATE  ENTRIES   PREV_DATE  \\\n",
       "3183  A011  R080  01-00-00  57 ST-7 AV  09/23/2021   511286  09/24/2021   \n",
       "3182  A011  R080  01-00-00  57 ST-7 AV  09/22/2021   511013  09/23/2021   \n",
       "3181  A011  R080  01-00-00  57 ST-7 AV  09/21/2021   510787  09/22/2021   \n",
       "3180  A011  R080  01-00-00  57 ST-7 AV  09/20/2021   510521  09/21/2021   \n",
       "3179  A011  R080  01-00-00  57 ST-7 AV  09/19/2021   510305  09/20/2021   \n",
       "3178  A011  R080  01-00-00  57 ST-7 AV  09/18/2021   510142  09/19/2021   \n",
       "3177  A011  R080  01-00-00  57 ST-7 AV  09/17/2021   509949  09/18/2021   \n",
       "3176  A011  R080  01-00-00  57 ST-7 AV  09/16/2021   509704  09/17/2021   \n",
       "3175  A011  R080  01-00-00  57 ST-7 AV  09/15/2021   509487  09/16/2021   \n",
       "3174  A011  R080  01-00-00  57 ST-7 AV  09/14/2021   509251  09/15/2021   \n",
       "3173  A011  R080  01-00-00  57 ST-7 AV  09/13/2021   508998  09/14/2021   \n",
       "3172  A011  R080  01-00-00  57 ST-7 AV  09/12/2021   508753  09/13/2021   \n",
       "3171  A011  R080  01-00-00  57 ST-7 AV  09/11/2021   508580  09/12/2021   \n",
       "3170  A011  R080  01-00-00  57 ST-7 AV  09/10/2021   508412  09/11/2021   \n",
       "3169  A011  R080  01-00-00  57 ST-7 AV  09/09/2021   508166  09/10/2021   \n",
       "3168  A011  R080  01-00-00  57 ST-7 AV  09/08/2021   507953  09/09/2021   \n",
       "3167  A011  R080  01-00-00  57 ST-7 AV  09/07/2021   507743  09/08/2021   \n",
       "3166  A011  R080  01-00-00  57 ST-7 AV  09/06/2021   507520  09/07/2021   \n",
       "3165  A011  R080  01-00-00  57 ST-7 AV  09/05/2021   507381  09/06/2021   \n",
       "3164  A011  R080  01-00-00  57 ST-7 AV  09/04/2021   507248  09/05/2021   \n",
       "3163  A011  R080  01-00-00  57 ST-7 AV  09/03/2021   507115  09/04/2021   \n",
       "3162  A011  R080  01-00-00  57 ST-7 AV  09/02/2021   506944  09/03/2021   \n",
       "3161  A011  R080  01-00-00  57 ST-7 AV  09/01/2021   506825  09/02/2021   \n",
       "\n",
       "      PREV_ENTRIES  DAILY_ENTRIES  \n",
       "3183      511513.0          227.0  \n",
       "3182      511286.0          273.0  \n",
       "3181      511013.0          226.0  \n",
       "3180      510787.0          266.0  \n",
       "3179      510521.0          216.0  \n",
       "3178      510305.0          163.0  \n",
       "3177      510142.0          193.0  \n",
       "3176      509949.0          245.0  \n",
       "3175      509704.0          217.0  \n",
       "3174      509487.0          236.0  \n",
       "3173      509251.0          253.0  \n",
       "3172      508998.0          245.0  \n",
       "3171      508753.0          173.0  \n",
       "3170      508580.0          168.0  \n",
       "3169      508412.0          246.0  \n",
       "3168      508166.0          213.0  \n",
       "3167      507953.0          210.0  \n",
       "3166      507743.0          223.0  \n",
       "3165      507520.0          139.0  \n",
       "3164      507381.0          133.0  \n",
       "3163      507248.0          133.0  \n",
       "3162      507115.0          171.0  \n",
       "3161      506944.0          119.0  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "single_turnstile = turnstiles_daily[(turnstiles_daily[\"C/A\"] == \"A011\") & \n",
    "(turnstiles_daily[\"UNIT\"] == \"R080\") & \n",
    "(turnstiles_daily[\"SCP\"] == \"01-00-00\") & \n",
    "(turnstiles_daily[\"STATION\"] == \"57 ST-7 AV\")& \n",
    "( turnstiles_daily[\"DATE\"] <= \"09/29/2021\")&\n",
    "( turnstiles_daily[\"DATE\"] >= \"09/01/2021\")                                  \n",
    "]\n",
    "\n",
    "single_turnstile.head(30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "ed589d6d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Daily Entries for Turnstile R311/R053/00-05-01 at 3 AV-149 ST Station')"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15,5))\n",
    "plt.plot(single_turnstile['DATE'], single_turnstile['DAILY_ENTRIES'])\n",
    "plt.ylabel('# of Entries')\n",
    "plt.xlabel('Date')\n",
    "plt.xticks(rotation=45)\n",
    "plt.title('Daily Entries for Turnstile R311/R053/00-05-01 at 3 AV-149 ST Station')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "9b8864c3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>PREV_DATE</th>\n",
       "      <th>PREV_ENTRIES</th>\n",
       "      <th>DAILY_ENTRIES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>323445</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/23/2021</td>\n",
       "      <td>4332318</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>4332970.0</td>\n",
       "      <td>652.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323444</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/22/2021</td>\n",
       "      <td>4331660</td>\n",
       "      <td>09/23/2021</td>\n",
       "      <td>4332318.0</td>\n",
       "      <td>658.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323443</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/21/2021</td>\n",
       "      <td>4330965</td>\n",
       "      <td>09/22/2021</td>\n",
       "      <td>4331660.0</td>\n",
       "      <td>695.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323442</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/20/2021</td>\n",
       "      <td>4330507</td>\n",
       "      <td>09/21/2021</td>\n",
       "      <td>4330965.0</td>\n",
       "      <td>458.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323441</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/19/2021</td>\n",
       "      <td>4330013</td>\n",
       "      <td>09/20/2021</td>\n",
       "      <td>4330507.0</td>\n",
       "      <td>494.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323440</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/18/2021</td>\n",
       "      <td>4329634</td>\n",
       "      <td>09/19/2021</td>\n",
       "      <td>4330013.0</td>\n",
       "      <td>379.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323439</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/17/2021</td>\n",
       "      <td>4329144</td>\n",
       "      <td>09/18/2021</td>\n",
       "      <td>4329634.0</td>\n",
       "      <td>490.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323438</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/16/2021</td>\n",
       "      <td>4328451</td>\n",
       "      <td>09/17/2021</td>\n",
       "      <td>4329144.0</td>\n",
       "      <td>693.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323437</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/15/2021</td>\n",
       "      <td>4327839</td>\n",
       "      <td>09/16/2021</td>\n",
       "      <td>4328451.0</td>\n",
       "      <td>612.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323436</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/14/2021</td>\n",
       "      <td>4327139</td>\n",
       "      <td>09/15/2021</td>\n",
       "      <td>4327839.0</td>\n",
       "      <td>700.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323435</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/13/2021</td>\n",
       "      <td>4326452</td>\n",
       "      <td>09/14/2021</td>\n",
       "      <td>4327139.0</td>\n",
       "      <td>687.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323434</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/12/2021</td>\n",
       "      <td>4325817</td>\n",
       "      <td>09/13/2021</td>\n",
       "      <td>4326452.0</td>\n",
       "      <td>635.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323433</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/11/2021</td>\n",
       "      <td>4325407</td>\n",
       "      <td>09/12/2021</td>\n",
       "      <td>4325817.0</td>\n",
       "      <td>410.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323432</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/10/2021</td>\n",
       "      <td>4324934</td>\n",
       "      <td>09/11/2021</td>\n",
       "      <td>4325407.0</td>\n",
       "      <td>473.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323431</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/09/2021</td>\n",
       "      <td>4324300</td>\n",
       "      <td>09/10/2021</td>\n",
       "      <td>4324934.0</td>\n",
       "      <td>634.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323430</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/08/2021</td>\n",
       "      <td>4323664</td>\n",
       "      <td>09/09/2021</td>\n",
       "      <td>4324300.0</td>\n",
       "      <td>636.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323429</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/07/2021</td>\n",
       "      <td>4323066</td>\n",
       "      <td>09/08/2021</td>\n",
       "      <td>4323664.0</td>\n",
       "      <td>598.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323428</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/06/2021</td>\n",
       "      <td>4322471</td>\n",
       "      <td>09/07/2021</td>\n",
       "      <td>4323066.0</td>\n",
       "      <td>595.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323427</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/05/2021</td>\n",
       "      <td>4322014</td>\n",
       "      <td>09/06/2021</td>\n",
       "      <td>4322471.0</td>\n",
       "      <td>457.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323426</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/04/2021</td>\n",
       "      <td>4321638</td>\n",
       "      <td>09/05/2021</td>\n",
       "      <td>4322014.0</td>\n",
       "      <td>376.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323425</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/03/2021</td>\n",
       "      <td>4321198</td>\n",
       "      <td>09/04/2021</td>\n",
       "      <td>4321638.0</td>\n",
       "      <td>440.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323424</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/02/2021</td>\n",
       "      <td>4320628</td>\n",
       "      <td>09/03/2021</td>\n",
       "      <td>4321198.0</td>\n",
       "      <td>570.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>323423</th>\n",
       "      <td>R179</td>\n",
       "      <td>R193</td>\n",
       "      <td>01-00-00</td>\n",
       "      <td>157 ST</td>\n",
       "      <td>09/01/2021</td>\n",
       "      <td>4320222</td>\n",
       "      <td>09/02/2021</td>\n",
       "      <td>4320628.0</td>\n",
       "      <td>406.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         C/A  UNIT       SCP STATION        DATE  ENTRIES   PREV_DATE  \\\n",
       "323445  R179  R193  01-00-00  157 ST  09/23/2021  4332318  09/24/2021   \n",
       "323444  R179  R193  01-00-00  157 ST  09/22/2021  4331660  09/23/2021   \n",
       "323443  R179  R193  01-00-00  157 ST  09/21/2021  4330965  09/22/2021   \n",
       "323442  R179  R193  01-00-00  157 ST  09/20/2021  4330507  09/21/2021   \n",
       "323441  R179  R193  01-00-00  157 ST  09/19/2021  4330013  09/20/2021   \n",
       "323440  R179  R193  01-00-00  157 ST  09/18/2021  4329634  09/19/2021   \n",
       "323439  R179  R193  01-00-00  157 ST  09/17/2021  4329144  09/18/2021   \n",
       "323438  R179  R193  01-00-00  157 ST  09/16/2021  4328451  09/17/2021   \n",
       "323437  R179  R193  01-00-00  157 ST  09/15/2021  4327839  09/16/2021   \n",
       "323436  R179  R193  01-00-00  157 ST  09/14/2021  4327139  09/15/2021   \n",
       "323435  R179  R193  01-00-00  157 ST  09/13/2021  4326452  09/14/2021   \n",
       "323434  R179  R193  01-00-00  157 ST  09/12/2021  4325817  09/13/2021   \n",
       "323433  R179  R193  01-00-00  157 ST  09/11/2021  4325407  09/12/2021   \n",
       "323432  R179  R193  01-00-00  157 ST  09/10/2021  4324934  09/11/2021   \n",
       "323431  R179  R193  01-00-00  157 ST  09/09/2021  4324300  09/10/2021   \n",
       "323430  R179  R193  01-00-00  157 ST  09/08/2021  4323664  09/09/2021   \n",
       "323429  R179  R193  01-00-00  157 ST  09/07/2021  4323066  09/08/2021   \n",
       "323428  R179  R193  01-00-00  157 ST  09/06/2021  4322471  09/07/2021   \n",
       "323427  R179  R193  01-00-00  157 ST  09/05/2021  4322014  09/06/2021   \n",
       "323426  R179  R193  01-00-00  157 ST  09/04/2021  4321638  09/05/2021   \n",
       "323425  R179  R193  01-00-00  157 ST  09/03/2021  4321198  09/04/2021   \n",
       "323424  R179  R193  01-00-00  157 ST  09/02/2021  4320628  09/03/2021   \n",
       "323423  R179  R193  01-00-00  157 ST  09/01/2021  4320222  09/02/2021   \n",
       "\n",
       "        PREV_ENTRIES  DAILY_ENTRIES  \n",
       "323445     4332970.0          652.0  \n",
       "323444     4332318.0          658.0  \n",
       "323443     4331660.0          695.0  \n",
       "323442     4330965.0          458.0  \n",
       "323441     4330507.0          494.0  \n",
       "323440     4330013.0          379.0  \n",
       "323439     4329634.0          490.0  \n",
       "323438     4329144.0          693.0  \n",
       "323437     4328451.0          612.0  \n",
       "323436     4327839.0          700.0  \n",
       "323435     4327139.0          687.0  \n",
       "323434     4326452.0          635.0  \n",
       "323433     4325817.0          410.0  \n",
       "323432     4325407.0          473.0  \n",
       "323431     4324934.0          634.0  \n",
       "323430     4324300.0          636.0  \n",
       "323429     4323664.0          598.0  \n",
       "323428     4323066.0          595.0  \n",
       "323427     4322471.0          457.0  \n",
       "323426     4322014.0          376.0  \n",
       "323425     4321638.0          440.0  \n",
       "323424     4321198.0          570.0  \n",
       "323423     4320628.0          406.0  "
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "single_turnstile = turnstiles_daily[(turnstiles_daily[\"C/A\"] == \"R179\") & \n",
    "(turnstiles_daily[\"UNIT\"] == \"R193\") & \n",
    "(turnstiles_daily[\"SCP\"] == \"01-00-00\") & \n",
    "(turnstiles_daily[\"STATION\"] == \"157 ST\")& \n",
    "( turnstiles_daily[\"DATE\"] <= \"09/30/2021\")&\n",
    "( turnstiles_daily[\"DATE\"] >= \"09/01/2021\")\n",
    "\n",
    "                                  \n",
    "]\n",
    "\n",
    "single_turnstile.head(30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "b6e40d6b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Daily Entries for Turnstile R311/R053/00-05-01 at 3 AV-149 ST Station')"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15,5))\n",
    "plt.plot(single_turnstile['DATE'], single_turnstile['DAILY_ENTRIES'])\n",
    "plt.ylabel('# of Entries')\n",
    "plt.xlabel('Date')\n",
    "plt.xticks(rotation=45)\n",
    "plt.title('Daily Entries for Turnstile R311/R053/00-05-01 at 3 AV-149 ST Station')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "ea27fca5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>C/A</th>\n",
       "      <th>UNIT</th>\n",
       "      <th>SCP</th>\n",
       "      <th>STATION</th>\n",
       "      <th>DATE</th>\n",
       "      <th>ENTRIES</th>\n",
       "      <th>PREV_DATE</th>\n",
       "      <th>PREV_ENTRIES</th>\n",
       "      <th>DAILY_ENTRIES</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>344361</th>\n",
       "      <td>R228</td>\n",
       "      <td>R143</td>\n",
       "      <td>00-00-05</td>\n",
       "      <td>28 ST</td>\n",
       "      <td>09/23/2021</td>\n",
       "      <td>7355827</td>\n",
       "      <td>09/24/2021</td>\n",
       "      <td>7356310.0</td>\n",
       "      <td>483.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>344360</th>\n",
       "      <td>R228</td>\n",
       "      <td>R143</td>\n",
       "      <td>00-00-05</td>\n",
       "      <td>28 ST</td>\n",
       "      <td>09/22/2021</td>\n",
       "      <td>7355253</td>\n",
       "      <td>09/23/2021</td>\n",
       "      <td>7355827.0</td>\n",
       "      <td>574.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>344359</th>\n",
       "      <td>R228</td>\n",
       "      <td>R143</td>\n",
       "      <td>00-00-05</td>\n",
       "      <td>28 ST</td>\n",
       "      <td>09/21/2021</td>\n",
       "      <td>7354740</td>\n",
       "      <td>09/22/2021</td>\n",
       "      <td>7355253.0</td>\n",
       "      <td>513.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>344358</th>\n",
       "      <td>R228</td>\n",
       "      <td>R143</td>\n",
       "      <td>00-00-05</td>\n",
       "      <td>28 ST</td>\n",
       "      <td>09/20/2021</td>\n",
       "      <td>7354160</td>\n",
       "      <td>09/21/2021</td>\n",
       "      <td>7354740.0</td>\n",
       "      <td>580.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>344357</th>\n",
       "      <td>R228</td>\n",
       "      <td>R143</td>\n",
       "      <td>00-00-05</td>\n",
       "      <td>28 ST</td>\n",
       "      <td>09/19/2021</td>\n",
       "      <td>7353626</td>\n",
       "      <td>09/20/2021</td>\n",
       "      <td>7354160.0</td>\n",
       "      <td>534.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         C/A  UNIT       SCP STATION        DATE  ENTRIES   PREV_DATE  \\\n",
       "344361  R228  R143  00-00-05   28 ST  09/23/2021  7355827  09/24/2021   \n",
       "344360  R228  R143  00-00-05   28 ST  09/22/2021  7355253  09/23/2021   \n",
       "344359  R228  R143  00-00-05   28 ST  09/21/2021  7354740  09/22/2021   \n",
       "344358  R228  R143  00-00-05   28 ST  09/20/2021  7354160  09/21/2021   \n",
       "344357  R228  R143  00-00-05   28 ST  09/19/2021  7353626  09/20/2021   \n",
       "\n",
       "        PREV_ENTRIES  DAILY_ENTRIES  \n",
       "344361     7356310.0          483.0  \n",
       "344360     7355827.0          574.0  \n",
       "344359     7355253.0          513.0  \n",
       "344358     7354740.0          580.0  \n",
       "344357     7354160.0          534.0  "
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "single_turnstile = turnstiles_daily[(turnstiles_daily[\"C/A\"] == \"R228\") & \n",
    "(turnstiles_daily[\"UNIT\"] == \"R143\") & \n",
    "(turnstiles_daily[\"SCP\"] == \"00-00-05\") & \n",
    "(turnstiles_daily[\"STATION\"] == \"28 ST\")& \n",
    "( turnstiles_daily[\"DATE\"] <= \"09/29/2021\")&\n",
    "( turnstiles_daily[\"DATE\"] >= \"09/01/2021\")                                  \n",
    "]\n",
    "\n",
    "single_turnstile.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "2c8422d0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Daily Entries for Turnstile R228/R143/00-00-05 at 28 ST Station')"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15,5))\n",
    "plt.plot(single_turnstile['DATE'], single_turnstile['DAILY_ENTRIES'])\n",
    "plt.ylabel('# of Entries')\n",
    "plt.xlabel('Date')\n",
    "plt.xticks(rotation=45)\n",
    "plt.title('Daily Entries for Turnstile R228/R143/00-00-05 at 28 ST Station')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "025d73c5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cc575937",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
